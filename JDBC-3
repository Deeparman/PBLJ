//MODEL (Student.java)
public class Student {
    private int studentID;
    private String name;
    private String department;
    private double marks;

    // Constructor
    public Student(int studentID, String name, String department, double marks) {
        this.studentID = studentID;
        this.name = name;
        this.department = department;
        this.marks = marks;
    }

    // Getters and setters
    public int getStudentID() { return studentID; }
    public String getName() { return name; }
    public String getDepartment() { return department; }
    public double getMarks() { return marks; }
    public void setName(String name) { this.name = name; }
    public void setDepartment(String department) { this.department = department; }
    public void setMarks(double marks) { this.marks = marks; }
}

//CONTROLLER(StudentDAO.java)
import java.sql.*;
import java.util.ArrayList;
import java.util.List;

public class StudentDAO {
    private Connection con;

    public StudentDAO() throws SQLException {
        con = DriverManager.getConnection("jdbc:mysql://localhost:3306/yourDB", "root", "yourPassword");
    }

    public void addStudent(Student s) throws SQLException {
        PreparedStatement ps = con.prepareStatement(
                "INSERT INTO Student (StudentID, Name, Department, Marks) VALUES (?, ?, ?, ?)");
        ps.setInt(1, s.getStudentID());
        ps.setString(2, s.getName());
        ps.setString(3, s.getDepartment());
        ps.setDouble(4, s.getMarks());
        ps.executeUpdate();
    }

    public List<Student> getAllStudents() throws SQLException {
        List<Student> list = new ArrayList<>();
        Statement stmt = con.createStatement();
        ResultSet rs = stmt.executeQuery("SELECT * FROM Student");
        while (rs.next()) {
            list.add(new Student(rs.getInt("StudentID"),
                                 rs.getString("Name"),
                                 rs.getString("Department"),
                                 rs.getDouble("Marks")));
        }
        return list;
    }

    public void updateStudent(Student s) throws SQLException {
        PreparedStatement ps = con.prepareStatement(
                "UPDATE Student SET Name=?, Department=?, Marks=? WHERE StudentID=?");
        ps.setString(1, s.getName());
        ps.setString(2, s.getDepartment());
        ps.setDouble(3, s.getMarks());
        ps.setInt(4, s.getStudentID());
        ps.executeUpdate();
    }

    public void deleteStudent(int studentID) throws SQLException {
        PreparedStatement ps = con.prepareStatement(
                "DELETE FROM Student WHERE StudentID=?");
        ps.setInt(1, studentID);
        ps.executeUpdate();
    }
}



//VIEW(StudentManagementApp.java)
import java.sql.SQLException;
import java.util.List;
import java.util.Scanner;

public class StudentManagementApp {
    public static void main(String[] args) throws SQLException {
        Scanner sc = new Scanner(System.in);
        StudentDAO dao = new StudentDAO();
        boolean exit = false;

        while (!exit) {
            System.out.println("\n1. Add Student\n2. View Students\n3. Update Student\n4. Delete Student\n5. Exit");
            System.out.print("Choose option: ");
            int choice = sc.nextInt();
            sc.nextLine(); // consume newline

            switch (choice) {
                case 1:
                    System.out.print("Enter ID: "); int id = sc.nextInt(); sc.nextLine();
                    System.out.print("Enter Name: "); String name = sc.nextLine();
                    System.out.print("Enter Department: "); String dept = sc.nextLine();
                    System.out.print("Enter Marks: "); double marks = sc.nextDouble();
                    dao.addStudent(new Student(id, name, dept, marks));
                    System.out.println("Student added!");
                    break;
                case 2:
                    List<Student> students = dao.getAllStudents();
                    System.out.println("ID\tName\tDepartment\tMarks");
                    for (Student s : students) {
                        System.out.println(s.getStudentID() + "\t" + s.getName() + "\t" +
                                           s.getDepartment() + "\t" + s.getMarks());
                    }
                    break;
                case 3:
                    System.out.print("Enter ID to update: "); int updateId = sc.nextInt(); sc.nextLine();
                    System.out.print("Enter new Name: "); String newName = sc.nextLine();
                    System.out.print("Enter new Department: "); String newDept = sc.nextLine();
                    System.out.print("Enter new Marks: "); double newMarks = sc.nextDouble();
                    dao.updateStudent(new Student(updateId, newName, newDept, newMarks));
                    System.out.println("Student updated!");
                    break;
                case 4:
                    System.out.print("Enter ID to delete: "); int deleteId = sc.nextInt();
                    dao.deleteStudent(deleteId);
                    System.out.println("Student deleted!");
                    break;
                case 5:
                    exit = true;
                    break;
                default:
                    System.out.println("Invalid choice!");
            }
        }

        sc.close();
    }
}
